name: Deploy to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Securely check out repository using full history for Vercel context
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up PHP with Composer, using a modern, supported version
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer

      # Install dependencies using production best practices
      - name: Install PHP dependencies
        run: |
          if [ -f composer.json ]; then
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-scripts
          fi

      # Run automated tests if present, fail fast on error
      - name: Run tests
        run: |
          if [ -f vendor/bin/phpunit ]; then
            vendor/bin/phpunit --testdox --no-coverage
          else
            echo "No tests found; skipping PHPUnit step."
          fi

      # Install Vercel CLI for deployment
      - name: Install Vercel CLI
        run: npm install --no-audit --no-fund --global vercel

      # Deploy to Vercel with robust error handling and secure secret usage
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          set -euo pipefail
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          vercel build --prod --token=$VERCEL_TOKEN
          vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

      # Confirm deployment completion
      - name: Deployment Complete
        run: echo "âœ… Deployment to Vercel production complete."
